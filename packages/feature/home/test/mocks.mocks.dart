// Mocks generated by Mockito 5.4.6 from annotations
// in home/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:home/data/datasources/remote_data_source.dart' as _i5;
import 'package:home/data/models/item_model.dart' as _i6;
import 'package:home/domain/entities/item.dart' as _i4;
import 'package:home/domain/repositories/home_repository.dart' as _i2;
import 'package:home/domain/usecases/fetch_items_usecase.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeHomeRepository_0 extends _i1.SmartFake
    implements _i2.HomeRepository {
  _FakeHomeRepository_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [HomeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeRepository extends _i1.Mock implements _i2.HomeRepository {
  MockHomeRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Item>> fetchItems() =>
      (super.noSuchMethod(
            Invocation.method(#fetchItems, []),
            returnValue: _i3.Future<List<_i4.Item>>.value(<_i4.Item>[]),
          )
          as _i3.Future<List<_i4.Item>>);
}

/// A class which mocks [RemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDataSource extends _i1.Mock implements _i5.RemoteDataSource {
  MockRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i6.ItemModel>> getRemoteItems() =>
      (super.noSuchMethod(
            Invocation.method(#getRemoteItems, []),
            returnValue: _i3.Future<List<_i6.ItemModel>>.value(
              <_i6.ItemModel>[],
            ),
          )
          as _i3.Future<List<_i6.ItemModel>>);
}

/// A class which mocks [FetchItemsUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockFetchItemsUseCase extends _i1.Mock implements _i7.FetchItemsUseCase {
  MockFetchItemsUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.HomeRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeHomeRepository_0(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i2.HomeRepository);

  @override
  _i3.Future<List<_i4.Item>> call() =>
      (super.noSuchMethod(
            Invocation.method(#call, []),
            returnValue: _i3.Future<List<_i4.Item>>.value(<_i4.Item>[]),
          )
          as _i3.Future<List<_i4.Item>>);
}
